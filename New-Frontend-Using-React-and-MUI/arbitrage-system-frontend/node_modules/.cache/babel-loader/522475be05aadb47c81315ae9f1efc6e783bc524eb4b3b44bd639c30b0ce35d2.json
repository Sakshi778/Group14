{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAKTEE\\\\Documents\\\\CitiBridge\\\\Workflow\\\\Group14\\\\New-Frontend-Using-React-and-MUI\\\\arbitrage-system-frontend\\\\src\\\\components\\\\saved_stocks\\\\SavedStocksTableView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TableContainer, TableCell, TableHead, TableRow, TableBody, Table, TableSortLabel, TextField, Button, Paper, CircularProgress } from '@mui/material';\nimport TablePagination from '@mui/material/TablePagination';\nimport Typography from '@mui/material/Typography';\nimport '../recommendator/StocksTableView.css';\nimport Checkbox from '@mui/material/Checkbox';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Alert, AlertTitle } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SavedStocksTableView({\n  url\n}) {\n  _s();\n  const [data, setData] = useState([]);\n  const [shouldRender, setShouldRender] = useState(false);\n  const [deleteStatus, setDeleteStatus] = useState(false);\n  const [gotStocks, setGotStocks] = useState(false);\n  const [marketStatus, setMarketStatus] = useState(false);\n  const [date, setDate] = useState('false');\n  const getData = url => {\n    //if market is closed then only fetch last trade data\n    fetch(url).then(response => response.json()).then(data => {\n      setData(data);\n      setShouldRender(true);\n      setSortedData(data);\n      setGotStocks(true);\n      console.log(data);\n    }).catch(error => console.error('Error fetching data:', error));\n  };\n  useEffect(() => {\n    getData(url);\n  }, []);\n  const [sortedData, setSortedData] = React.useState(data);\n  const [selectedRows, setSelectedRows] = React.useState([]);\n  const [selectAll, setSelectAll] = React.useState(false);\n  const [sortConfig, setSortConfig] = React.useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [searchText, setSearchText] = React.useState('');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n    const sorted = [...data].sort((a, b) => {\n      if (a[key] < b[key]) return direction === 'asc' ? -1 : 1;\n      if (a[key] > b[key]) return direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n    setSortedData(sorted);\n  };\n  const handleSearch = event => {\n    const inputText = event.target.value;\n    setSearchText(inputText.toLowerCase());\n    const filteredData = data.filter(item => Object.values(item).some(value => value.toString().toLowerCase().includes(inputText)));\n    setSortedData(filteredData);\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleRowCheckboxToggle = rowId => {\n    if (selectedRows.includes(rowId)) {\n      setSelectedRows(selectedRows.filter(id => id !== rowId));\n    } else {\n      setSelectedRows([...selectedRows, rowId]);\n    }\n  };\n  const handleSelectAll = () => {\n    if (selectAll) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(sortedData.map(item => item.id));\n    }\n    setSelectAll(!selectAll);\n  };\n  async function sendDataToServer(data) {\n    try {\n      const response = await fetch('http://localhost:8080/deleteStock', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        // Data sent successfully\n        console.log('Data sent successfully');\n        setDeleteStatus(true);\n        for (let i = 0; i < data.length; i++) {\n          setSortedData(prevItems => prevItems.filter(item => !data.includes(item.id)));\n        }\n      } else {\n        // Handle error\n        console.error('Error sending data to server');\n        /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Error occured! Please try again!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this);\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n    }\n  }\n  const handleDelete = () => {\n    sendDataToServer(selectedRows);\n    setSelectedRows([]);\n  };\n  const formatDateAndTime = timestamp => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [deleteStatus && /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => {\n          setDeleteStatus(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Stocks have been deleted successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 67\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        style: {\n          marginBottom: '5%',\n          marginLeft: '3%',\n          marginTop: '3%',\n          textAlign: 'left'\n        },\n        children: \"Saved Stocks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          marginBottom: '2%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search Company Name or Symbol\",\n          variant: \"outlined\",\n          size: \"small\",\n          value: searchText,\n          onChange: handleSearch,\n          className: \"searchInput\",\n          style: {\n            marginLeft: '3%',\n            marginRight: 5,\n            minWidth: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 32\n          }, this),\n          style: {\n            flex: 'none',\n            marginLeft: '10px',\n            alignSelf: 'strech'\n          },\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        style: {\n          maxHeight: 'calc(90vh - 90px)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectAll,\n                  onChange: handleSelectAll,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'companyName',\n                  direction: sortConfig.key === 'companyName' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('companyName'),\n                  children: \"Company Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'symbol',\n                  direction: sortConfig.key === 'symbol' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('symbol'),\n                  children: \"Symbol\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'bsePrice',\n                  direction: sortConfig.key === 'bsePrice' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('bsePrice'),\n                  children: \"BSE Price (INR)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'nsePrice',\n                  direction: sortConfig.key === 'nsePrice' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('nsePrice'),\n                  children: \"NSE Price (INR)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'profit',\n                  direction: sortConfig.key === 'profit' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('profit'),\n                  children: \"Profit (INR)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'timestamp',\n                  direction: sortConfig.key === 'timestamp' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('timestamp'),\n                  children: \"Timestamp\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: sortedData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedRows.includes(item.id),\n                onChange: () => handleRowCheckboxToggle(item.id),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.companyName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.bsePrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.nsePrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.profit.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 25\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 20, 50],\n        component: \"div\",\n        count: sortedData.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n_s(SavedStocksTableView, \"oviCbINFUvsBSZpmg7NfSkXdYLc=\");\n_c = SavedStocksTableView;\nexport default SavedStocksTableView;\nvar _c;\n$RefreshReg$(_c, \"SavedStocksTableView\");","map":{"version":3,"names":["React","useState","useEffect","TableContainer","TableCell","TableHead","TableRow","TableBody","Table","TableSortLabel","TextField","Button","Paper","CircularProgress","TablePagination","Typography","Checkbox","DeleteIcon","Alert","AlertTitle","jsxDEV","_jsxDEV","SavedStocksTableView","url","_s","data","setData","shouldRender","setShouldRender","deleteStatus","setDeleteStatus","gotStocks","setGotStocks","marketStatus","setMarketStatus","date","setDate","getData","fetch","then","response","json","setSortedData","console","log","catch","error","sortedData","selectedRows","setSelectedRows","selectAll","setSelectAll","sortConfig","setSortConfig","key","direction","searchText","setSearchText","page","setPage","rowsPerPage","setRowsPerPage","handleSort","sorted","sort","a","b","handleSearch","event","inputText","target","value","toLowerCase","filteredData","filter","item","Object","values","some","toString","includes","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","handleRowCheckboxToggle","rowId","id","handleSelectAll","map","sendDataToServer","method","headers","body","JSON","stringify","ok","i","length","prevItems","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","handleDelete","formatDateAndTime","timestamp","className","onClose","variant","gutterBottom","style","marginBottom","marginLeft","marginTop","textAlign","display","flexDirection","label","size","onChange","marginRight","minWidth","color","startIcon","flex","alignSelf","onClick","component","maxHeight","stickyHeader","checked","fontWeight","active","slice","companyName","symbol","bsePrice","nsePrice","profit","toFixed","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["C:/Users/BHAKTEE/Documents/CitiBridge/Workflow/Group14/New-Frontend-Using-React-and-MUI/arbitrage-system-frontend/src/components/saved_stocks/SavedStocksTableView.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { TableContainer, TableCell, TableHead, TableRow, TableBody, Table, TableSortLabel, TextField, Button, Paper, CircularProgress } from '@mui/material';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport Typography from '@mui/material/Typography';\r\nimport '../recommendator/StocksTableView.css'\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport {Alert, AlertTitle} from '@mui/material';\r\nfunction SavedStocksTableView({url}) {\r\n    const [data, setData] = useState([])\r\n    const [shouldRender, setShouldRender] = useState(false)\r\n    const [deleteStatus, setDeleteStatus] = useState(false)\r\n    const [gotStocks, setGotStocks] = useState(false);\r\n    const [marketStatus, setMarketStatus] = useState(false);\r\n    const [date, setDate] = useState('false');\r\n\r\n    const getData = (url) => {\r\n      //if market is closed then only fetch last trade data\r\n        fetch(url)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            setData(data)\r\n            setShouldRender(true);\r\n            setSortedData(data);\r\n            setGotStocks(true);\r\n            console.log(data)\r\n          })\r\n          .catch((error) => console.error('Error fetching data:', error)); \r\n    }\r\n\r\n    useEffect(() =>{\r\n        getData(url)\r\n    }, [])\r\n    \r\n    const [sortedData, setSortedData] = React.useState(data);\r\n    const [selectedRows, setSelectedRows] = React.useState([]);\r\n    const [selectAll, setSelectAll] = React.useState(false);\r\n    const [sortConfig, setSortConfig] = React.useState({\r\n        key: null,\r\n        direction: 'asc',\r\n    });\r\n\r\n    const [searchText, setSearchText] = React.useState('');\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleSort = (key) => {\r\n        let direction = 'asc';\r\n        if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n          direction = 'desc';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    \r\n        const sorted = [...data].sort((a, b) => {\r\n          if (a[key] < b[key]) return direction === 'asc' ? -1 : 1;\r\n          if (a[key] > b[key]) return direction === 'asc' ? 1 : -1;\r\n          return 0;\r\n        });\r\n    \r\n        setSortedData(sorted);\r\n      };\r\n\r\n      const handleSearch = (event) => {\r\n        const inputText = event.target.value;\r\n        setSearchText(inputText.toLowerCase());\r\n    \r\n        const filteredData = data.filter((item) =>\r\n          Object.values(item).some((value) =>\r\n            value.toString().toLowerCase().includes(inputText)\r\n          )\r\n        );\r\n    \r\n        setSortedData(filteredData);\r\n      };\r\n\r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n\r\n      const handleRowCheckboxToggle = (rowId) => {\r\n        if (selectedRows.includes(rowId)) {\r\n          setSelectedRows(selectedRows.filter((id) => id !== rowId));\r\n        } else {\r\n          setSelectedRows([...selectedRows, rowId]);\r\n        }\r\n      };\r\n    \r\n      const handleSelectAll = () => {\r\n        if (selectAll) {\r\n          setSelectedRows([]);\r\n        } else {\r\n          setSelectedRows(sortedData.map((item) => item.id));\r\n        }\r\n        setSelectAll(!selectAll);\r\n      };\r\n\r\n      async function sendDataToServer(data) {\r\n        try {\r\n          const response = await fetch('http://localhost:8080/deleteStock', {\r\n            method: 'DELETE',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n          });\r\n      \r\n          if (response.ok) {\r\n            // Data sent successfully\r\n            console.log('Data sent successfully');\r\n            setDeleteStatus(true);\r\n            for(let i = 0; i < data.length; i++) {\r\n              setSortedData(prevItems => prevItems.filter(item => !data.includes(item.id)));\r\n            }\r\n            \r\n          } else {\r\n            // Handle error\r\n            console.error('Error sending data to server');\r\n            <Alert severity=\"error\">\r\n              <AlertTitle>Error</AlertTitle>\r\n              <strong>Error occured! Please try again!</strong>\r\n            </Alert>\r\n          }\r\n        } catch (error) {\r\n          console.error('An error occurred:', error);\r\n        }\r\n      }    \r\n\r\n    const handleDelete = () => {\r\n        sendDataToServer(selectedRows)\r\n        setSelectedRows([])\r\n    }\r\n\r\n    const formatDateAndTime = (timestamp) => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"root\">\r\n              <div>\r\n                {deleteStatus && (\r\n                  <Alert onClose={() => {setDeleteStatus(false)}}><strong>Stocks have been deleted successfully!</strong></Alert>\r\n                )}\r\n                <Typography variant=\"h4\" gutterBottom style={{marginBottom: '5%', marginLeft: '3%', marginTop: '3%', textAlign: 'left'}}>\r\n                    Saved Stocks\r\n                </Typography>\r\n                <div style={{display: 'flex', flexDirection: 'row', marginBottom: '2%'}}>\r\n                <TextField\r\n                    label=\"Search Company Name or Symbol\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={searchText}\r\n                    onChange={handleSearch}\r\n                    className='searchInput'\r\n                    style={{marginLeft: '3%', marginRight: 5, minWidth: '300px'}}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<DeleteIcon />}\r\n                    style={{flex: 'none',  marginLeft: '10px',  alignSelf: 'strech' }}\r\n                    onClick={handleDelete}\r\n                >\r\n                    Delete\r\n                </Button>\r\n                </div>\r\n            \r\n\r\n            <TableContainer  component={Paper} style={{ maxHeight: 'calc(90vh - 90px)' }}>\r\n                <Table stickyHeader>\r\n                <TableHead>\r\n                    <TableRow>\r\n                    <TableCell >\r\n                        <Checkbox\r\n                        checked={selectAll}\r\n                        onChange={handleSelectAll}\r\n                        color=\"primary\"\r\n                        />\r\n                    </TableCell>\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                    <TableSortLabel\r\n                        active={sortConfig.key === 'companyName'}\r\n                        direction={sortConfig.key === 'companyName' ? sortConfig.direction : 'asc'}\r\n                        onClick={() => handleSort('companyName')}\r\n                        >\r\n                        Company Name\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                    <TableSortLabel\r\n                        active={sortConfig.key === 'symbol'}\r\n                        direction={sortConfig.key === 'symbol' ? sortConfig.direction : 'asc'}\r\n                        onClick={() => handleSort('symbol')}\r\n                    >\r\n                        Symbol\r\n                    </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                        <TableSortLabel\r\n                            active={sortConfig.key === 'bsePrice'}\r\n                            direction={sortConfig.key === 'bsePrice' ? sortConfig.direction : 'asc'}\r\n                            onClick={() => handleSort('bsePrice')}\r\n                        >\r\n                            BSE Price (INR)\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                        <TableSortLabel\r\n                            active={sortConfig.key === 'nsePrice'}\r\n                            direction={sortConfig.key === 'nsePrice' ? sortConfig.direction : 'asc'}\r\n                            onClick={() => handleSort('nsePrice')}\r\n                        >\r\n                            NSE Price (INR)\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                        <TableSortLabel\r\n                            active={sortConfig.key === 'profit'}\r\n                            direction={sortConfig.key === 'profit' ? sortConfig.direction : 'asc'}\r\n                            onClick={() => handleSort('profit')}\r\n                        >\r\n                            Profit (INR)\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                        <TableSortLabel\r\n                            active={sortConfig.key === 'timestamp'}\r\n                            direction={sortConfig.key === 'timestamp' ? sortConfig.direction : 'asc'}\r\n                            onClick={() => handleSort('timestamp')}\r\n                        >\r\n                            Timestamp\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {sortedData\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((item) => (\r\n                    <TableRow \r\n                        key={item.id}\r\n                        >\r\n                            <Checkbox\r\n                            checked={selectedRows.includes(item.id)}\r\n                            onChange={() => handleRowCheckboxToggle(item.id)}\r\n                            color=\"primary\"\r\n                            />\r\n                        <TableCell>{item.companyName}</TableCell>\r\n                        <TableCell>{item.symbol}</TableCell>\r\n                        <TableCell>{item.bsePrice}</TableCell>\r\n                        <TableCell>{item.nsePrice}</TableCell>\r\n                        <TableCell>{(item.profit).toFixed(2)}</TableCell>\r\n                        <TableCell>{item.timestamp}</TableCell>\r\n                        {/* Add more table cells for other data properties */}\r\n                    </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 20, 50]}\r\n                component=\"div\"\r\n                count={sortedData.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n            </div>\r\n      </div>\r\n    );\r\n  }  \r\n\r\nexport default SavedStocksTableView"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}