{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAKTEE\\\\Documents\\\\CitiBridge\\\\Workflow\\\\Group14\\\\New-Frontend-Using-React-and-MUI\\\\arbitrage-system-frontend\\\\src\\\\components\\\\login\\\\Login.js\";\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Change import\nimport { Paper, TextField, Button, Typography } from '@mui/material';\nimport { AuthContext } from '../contexts/AuthContext';\nimport './Login.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  // const { username, password, setUsername, setPassword } = useContext(AuthContext);\n  // const navigate = useNavigate(); // Use useNavigate\n\n  // const handleUsernameChange = (event) => {\n  //   setUsername(event.target.value);\n  // };\n\n  // const handlePasswordChange = (event) => {\n  //   setPassword(event.target.value);\n  // };\n\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   // Add your authentication logic here\n  //   const isAuthenticated = true; // Example: You need to set this based on actual authentication state\n\n  //   if (isAuthenticated) {\n  //     navigate('/'); // Navigate to home page\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      className: \"login-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: \"login-input\",\n        label: \"Username\",\n        variant: \"outlined\",\n        fullWidth: true,\n        value: username,\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: \"login-input\",\n        label: \"Password\",\n        variant: \"outlined\",\n        fullWidth: true,\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"login-button\",\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Log in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","Paper","TextField","Button","Typography","AuthContext","jsxDEV","_jsxDEV","Login","elevation","className","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","handleSubmit","label","fullWidth","value","username","onChange","handleUsernameChange","type","password","handlePasswordChange","color","_c","$RefreshReg$"],"sources":["C:/Users/BHAKTEE/Documents/CitiBridge/Workflow/Group14/New-Frontend-Using-React-and-MUI/arbitrage-system-frontend/src/components/login/Login.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Change import\r\nimport { Paper, TextField, Button, Typography } from '@mui/material';\r\nimport {AuthContext} from '../contexts/AuthContext';\r\nimport './Login.css'; // Import the CSS file\r\n\r\n\r\nconst Login = () => {\r\n  // const { username, password, setUsername, setPassword } = useContext(AuthContext);\r\n  // const navigate = useNavigate(); // Use useNavigate\r\n\r\n  // const handleUsernameChange = (event) => {\r\n  //   setUsername(event.target.value);\r\n  // };\r\n\r\n  // const handlePasswordChange = (event) => {\r\n  //   setPassword(event.target.value);\r\n  // };\r\n\r\n  // const handleSubmit = (event) => {\r\n  //   event.preventDefault();\r\n  //   // Add your authentication logic here\r\n  //   const isAuthenticated = true; // Example: You need to set this based on actual authentication state\r\n\r\n  //   if (isAuthenticated) {\r\n  //     navigate('/'); // Navigate to home page\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Paper elevation={3} className=\"login-container\">\r\n      <Typography variant=\"h5\" className=\"login-title\">\r\n        Login\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          className=\"login-input\"\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          value={username}\r\n          onChange={handleUsernameChange}\r\n        />\r\n        <TextField\r\n          className=\"login-input\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handlePasswordChange}\r\n        />\r\n        <Button className=\"login-button\" type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Log in\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,KAAK,EAAEC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AACpE,SAAQC,WAAW,QAAO,yBAAyB;AACnD,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGtB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACED,OAAA,CAACN,KAAK;IAACQ,SAAS,EAAE,CAAE;IAACC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9CJ,OAAA,CAACH,UAAU;MAACQ,OAAO,EAAC,IAAI;MAACF,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAEjD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbT,OAAA;MAAMU,QAAQ,EAAEC,YAAa;MAAAP,QAAA,gBAC3BJ,OAAA,CAACL,SAAS;QACRQ,SAAS,EAAC,aAAa;QACvBS,KAAK,EAAC,UAAU;QAChBP,OAAO,EAAC,UAAU;QAClBQ,SAAS;QACTC,KAAK,EAAEC,QAAS;QAChBC,QAAQ,EAAEC;MAAqB;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFT,OAAA,CAACL,SAAS;QACRQ,SAAS,EAAC,aAAa;QACvBS,KAAK,EAAC,UAAU;QAChBP,OAAO,EAAC,UAAU;QAClBQ,SAAS;QACTK,IAAI,EAAC,UAAU;QACfJ,KAAK,EAAEK,QAAS;QAChBH,QAAQ,EAAEI;MAAqB;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eACFT,OAAA,CAACJ,MAAM;QAACO,SAAS,EAAC,cAAc;QAACe,IAAI,EAAC,QAAQ;QAACb,OAAO,EAAC,WAAW;QAACgB,KAAK,EAAC,SAAS;QAAAjB,QAAA,EAAC;MAEnF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ,CAAC;AAACa,EAAA,GAnDIrB,KAAK;AAqDX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}