{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAKTEE\\\\Documents\\\\CitiBridge\\\\Workflow\\\\Group14\\\\New-Frontend-Using-React-and-MUI\\\\arbitrage-system-frontend\\\\src\\\\components\\\\recommendator\\\\Recommender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport SideBarComponent from './SideBarComponent';\nimport './Recommender.css';\nimport RecommendedStocks from './RecommendedStocks';\nimport StockList from '../StockList';\nimport StocksTableView from './StocksTableView';\nimport GridTableViewToggle from './GridTableViewToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recommender() {\n  _s();\n  const [index, setIndex] = useState('');\n  const [display, setDisplay] = useState(true);\n  const updateIndex = index => {\n    setIndex(index);\n    setDisplay(false);\n  };\n\n  // const getData = (url) => {\n  //     //get it for first time\n  //     const intervalId = setInterval(() => {\n  //         fetch(url)\n  //         .then((response) => response.json())\n  //         .then((data) => {\n  //           setStocks(data)\n  //           console.log(stocks)\n  //         })\n  //         .catch((error) => console.error('Error fetching data:', error));\n  //       }, 15000);\n  //       return () => clearInterval(intervalId);\n  // }\n\n  // const fetchData = async (url) => {\n  //     try {\n  //       const response = await fetch(url);\n  //       const newStocks = await response.json();\n\n  //       // Use functional state update to merge new data with existing data\n  //       setStocks(prevStocks => [...prevStocks, ...newStocks]);\n  //     } catch (error) {\n  //       console.error('Error fetching data:', error);\n  //     }\n  //   };\n\n  // useEffect(() =>{\n  // //     fetchData('http://localhost:8080/getStockDetails');\n  // //     const intervalId = setInterval(fetchData, 15000);\n\n  // // // Clean up the interval when the component unmounts\n  // //     return () => clearInterval(intervalId);\n  //     getData('http://localhost:8080/getStockDetails')\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommender-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flex: '30%',\n        marginRight: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(SideBarComponent, {\n        updateIndex: updateIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), display && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          flex: '65%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          color: \"text.secondary\",\n          gutterBottom: true,\n          style: {\n            textAlign: 'center',\n            marginTop: 20,\n            marginBottom: 20,\n            color: 'black'\n          },\n          children: \"Arbitrage Recommender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            textAlign: 'center',\n            marginTop: 20,\n            marginBottom: 20,\n            color: 'grey',\n            // fontWeight: 'bold',\n            minWidth: '100px'\n          },\n          children: \"Choose the index and get recommendations based on that index.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), !display && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(StocksTableView, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(Recommender, \"6ZVITJpez2PjxAYB+Vzj7eT95gc=\");\n_c = Recommender;\nexport default Recommender;\nvar _c;\n$RefreshReg$(_c, \"Recommender\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Typography","SideBarComponent","RecommendedStocks","StockList","StocksTableView","GridTableViewToggle","jsxDEV","_jsxDEV","Recommender","_s","index","setIndex","display","setDisplay","updateIndex","className","children","style","flex","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","flexDirection","variant","color","gutterBottom","textAlign","marginTop","marginBottom","minWidth","_c","$RefreshReg$"],"sources":["C:/Users/BHAKTEE/Documents/CitiBridge/Workflow/Group14/New-Frontend-Using-React-and-MUI/arbitrage-system-frontend/src/components/recommendator/Recommender.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { TextField } from '@mui/material'\r\nimport Typography from '@mui/material/Typography';\r\nimport SideBarComponent from './SideBarComponent';\r\nimport './Recommender.css'\r\nimport RecommendedStocks from './RecommendedStocks';\r\nimport StockList from '../StockList';\r\nimport StocksTableView from './StocksTableView';\r\nimport GridTableViewToggle from './GridTableViewToggle';\r\n\r\n\r\nfunction Recommender() {\r\n    const [index, setIndex] = useState('')\r\n    const [display, setDisplay] = useState(true)\r\n\r\n    const updateIndex = (index) => {\r\n        setIndex(index);\r\n        setDisplay(false);\r\n    };\r\n\r\n    // const getData = (url) => {\r\n    //     //get it for first time\r\n    //     const intervalId = setInterval(() => {\r\n    //         fetch(url)\r\n    //         .then((response) => response.json())\r\n    //         .then((data) => {\r\n    //           setStocks(data)\r\n    //           console.log(stocks)\r\n    //         })\r\n    //         .catch((error) => console.error('Error fetching data:', error));\r\n    //       }, 15000);\r\n    //       return () => clearInterval(intervalId);\r\n    // }\r\n\r\n    // const fetchData = async (url) => {\r\n    //     try {\r\n    //       const response = await fetch(url);\r\n    //       const newStocks = await response.json();\r\n  \r\n    //       // Use functional state update to merge new data with existing data\r\n    //       setStocks(prevStocks => [...prevStocks, ...newStocks]);\r\n    //     } catch (error) {\r\n    //       console.error('Error fetching data:', error);\r\n    //     }\r\n    //   };\r\n\r\n    \r\n\r\n    // useEffect(() =>{\r\n    // //     fetchData('http://localhost:8080/getStockDetails');\r\n    // //     const intervalId = setInterval(fetchData, 15000);\r\n\r\n    // // // Clean up the interval when the component unmounts\r\n    // //     return () => clearInterval(intervalId);\r\n    //     getData('http://localhost:8080/getStockDetails')\r\n    // }, [])\r\n      \r\n    return (\r\n        <div className='recommender-container'>\r\n            <div style={{\r\n                display: 'flex',\r\n                flex: '30%',\r\n                marginRight: '20px'\r\n            }}>\r\n            <SideBarComponent updateIndex={updateIndex}/>\r\n            {display && (\r\n                <div style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    flex: '65%',\r\n                }}>\r\n                    <Typography variant=\"h3\" color=\"text.secondary\" gutterBottom\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginTop: 20,\r\n                        marginBottom: 20,\r\n                        color: 'black',\r\n                    }}>\r\n                        Arbitrage Recommender\r\n                    </Typography>\r\n                    <Typography variant='h6'\r\n                    style={{\r\n                        textAlign: 'center',\r\n                        marginTop: 20,\r\n                        marginBottom: 20,\r\n                        color: 'grey',\r\n                        // fontWeight: 'bold',\r\n                        minWidth: '100px',\r\n                    }}>Choose the index and get recommendations based on that index.</Typography>\r\n                </div>\r\n            )}\r\n\r\n            {!display && (\r\n                <div>\r\n                {/* Your component's content */}\r\n                <StocksTableView/>\r\n                </div>\r\n            )}\r\n            \r\n            </div>\r\n\r\n            {/* <RecommendedStocks stockList = {stocks}/> */}\r\n            {/* <StockList stockList = {stocks}/> */}\r\n            \r\n\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Recommender"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}