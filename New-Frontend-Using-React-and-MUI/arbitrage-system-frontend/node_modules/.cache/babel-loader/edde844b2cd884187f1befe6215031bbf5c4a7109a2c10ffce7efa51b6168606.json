{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAKTEE\\\\Documents\\\\CitiBridge\\\\Workflow\\\\Group14\\\\New-Frontend-Using-React-and-MUI\\\\arbitrage-system-frontend\\\\src\\\\components\\\\recommendator\\\\StocksTableView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, memo } from 'react';\nimport { TableContainer, TableCell, TableHead, TableRow, TableBody, Table, TableSortLabel, TextField, Button, Paper, CircularProgress } from '@mui/material';\nimport TablePagination from '@mui/material/TablePagination';\nimport Typography from '@mui/material/Typography';\nimport './StocksTableView.css';\nimport Checkbox from '@mui/material/Checkbox';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { Alert, AlertTitle } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'http://localhost:8080/';\nfunction StocksTableView({\n  index\n}) {\n  _s();\n  const [urlStocks, setUrlStocks] = useState('');\n  const [data, setData] = useState([]);\n  const [shouldRender, setShouldRender] = useState(false);\n  const [saveStatus, setSaveStatus] = useState(false);\n  const [gotStocks, setGotStocks] = useState(false);\n  const [marketStatus, setMarketStatus] = useState(false);\n  const [indexStatus, setIndexStatus] = useState(null);\n  const [urlIndex, setUrlIndex] = useState('');\n  const fetchData = async () => {\n    // Fetch data from the current API URL\n    try {\n      const response = await fetch(urlStocks);\n      const jsonData = await response.json();\n      setData(jsonData);\n      setGotStocks(true);\n      setSortedData(jsonData);\n      setShouldRender(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n    try {\n      const response = await fetch(urlIndex);\n      const jsonData = await response.json();\n      setIndexStatus(jsonData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const getMarketStatus = async () => {\n    fetch('http://localhost:8080/marketStatus').then(response => response.json()).then(status => {\n      setMarketStatus(status);\n      console.log(status);\n    }).catch(error => console.error('Error fetching data:', error));\n  };\n  useEffect(() => {\n    // Initial data fetch\n\n    // Fetch data every 15 seconds\n    console.log(index);\n    setUrlStocks(baseUrl + index);\n    setUrlIndex(baseUrl + 'indexStatus/' + index);\n    getMarketStatus();\n    console.log(urlStocks);\n\n    // if(marketStatus){\n    //   const interval = setInterval(() => {\n    //     fetchData();\n    //   }, 15000);\n\n    // // Clean up the interval when the component unmounts or when the effect re-runs\n    //   return () => clearInterval(interval);\n    // }\n    // else{\n    //   fetchData();\n    // }\n  }, [index]);\n\n  // useEffect(() => {\n  //   setUrlStocks(baseUrl+index);\n  //   setUrlIndex(baseUrl+'indexStatus/'+index);\n  // }, [index])\n\n  // const getData = (index) => {\n  //   fetch('http://localhost:8080/marketStatus')\n  //   .then((response) => response.json())\n  //   .then((status) => {\n  //       setMarketStatus(status);\n  //       console.log(status);\n  //   })\n  //   .catch((error) => console.error('Error fetching data:', error));\n\n  //   //if market is open then and then only update the stocks after every 15 sec\n  //   if(marketStatus){\n  //     const intervalId = setInterval(() => {\n  //       fetch(url)\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         setData(data)\n  //         setShouldRender(true);\n  //         setSortedData(data);\n  //         setGotStocks(true);\n  //         console.log(data)\n  //       })\n  //       .catch((error) => console.error('Error fetching data:', error));\n  //     }, 15000);\n  //     return () => clearInterval(intervalId);\n  //   }\n\n  //   //if market is closed then only fetch last trade data\n  //   else{\n  //     fetch(url)\n  //       .then((response) => response.json())\n  //       .then((data) => {\n  //         setData(data)\n  //         setShouldRender(true);\n  //         setSortedData(data);\n  //         setGotStocks(true);\n  //         console.log(data)\n  //       })\n  //       .catch((error) => console.error('Error fetching data:', error));\n  //   }\n\n  // }\n\n  const [sortedData, setSortedData] = React.useState(data);\n  const [selectedRows, setSelectedRows] = React.useState([]);\n  const [selectAll, setSelectAll] = React.useState(false);\n  const [sortConfig, setSortConfig] = React.useState({\n    key: null,\n    direction: 'asc'\n  });\n  const [searchText, setSearchText] = React.useState('');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleSort = key => {\n    let direction = 'asc';\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\n      direction = 'desc';\n    }\n    setSortConfig({\n      key,\n      direction\n    });\n    const sorted = [...data].sort((a, b) => {\n      if (a[key] < b[key]) return direction === 'asc' ? -1 : 1;\n      if (a[key] > b[key]) return direction === 'asc' ? 1 : -1;\n      return 0;\n    });\n    setSortedData(sorted);\n  };\n  const handleSearch = event => {\n    const inputText = event.target.value;\n    setSearchText(inputText.toLowerCase());\n    const filteredData = data.filter(item => Object.values(item).some(value => value.toString().toLowerCase().includes(inputText)));\n    setSortedData(filteredData);\n  };\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleRowCheckboxToggle = rowId => {\n    if (selectedRows.includes(rowId)) {\n      setSelectedRows(selectedRows.filter(id => id !== rowId));\n    } else {\n      setSelectedRows([...selectedRows, rowId]);\n    }\n  };\n  const handleSelectAll = () => {\n    if (selectAll) {\n      setSelectedRows([]);\n    } else {\n      setSelectedRows(sortedData.map(item => item.id));\n    }\n    setSelectAll(!selectAll);\n  };\n  async function sendDataToServer(data) {\n    try {\n      const response = await fetch('http://localhost:8080/sdavis92/addStock', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      if (response.ok) {\n        // Data sent successfully\n        console.log('Data sent successfully');\n        setSaveStatus(true);\n      } else {\n        // Handle error\n        console.error('Error sending data to server');\n        /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Error occured! Please try again!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this);\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n    }\n  }\n  const handleSave = () => {\n    var savedStocks = [];\n    for (let i = 0; i < selectedRows.length; i++) {\n      var targetObject = data.find(obj => obj.id === selectedRows[i]);\n      console.log(targetObject);\n      var savedStock = {};\n      savedStock.username = 'sdavis92';\n      savedStock.symbol = targetObject.symbol;\n      savedStock.companyName = targetObject.companyName;\n      savedStock.bsePrice = targetObject.bsePrice;\n      savedStock.nsePrice = targetObject.nsePrice;\n      savedStock.profit = targetObject.profit;\n      savedStock.timestamp = Date.now();\n      savedStocks.push(savedStock);\n    }\n    // console.log(savedStocks)\n    setSelectedRows([]);\n    sendDataToServer(savedStocks);\n  };\n  const buyHandler = (bsePrice, nsePrice) => {\n    if (bsePrice > nsePrice) return \"NSE\";else return \"BSE\";\n  };\n  const sellHandler = (bsePrice, nsePrice) => {\n    if (bsePrice > nsePrice) return \"BSE\";else return \"NSE\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [!gotStocks && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          marginTop: '10vh'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h4\",\n        style: {\n          marginLeft: '25vh',\n          marginRight: '25vh',\n          marginBottom: '25vh',\n          marginTop: '10vh',\n          minWidth: '300px',\n          maxWidth: '1500px'\n        },\n        children: \"Your Recommendations Are Getting Ready!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }, this), shouldRender && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [saveStatus && /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => {\n          setSaveStatus(false);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Stocks have been saved successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        style: {\n          marginBottom: '5%',\n          marginLeft: '3%',\n          marginTop: '3%',\n          textAlign: 'left'\n        },\n        children: [index, \" Arbitrage Recommendations\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          marginBottom: '2%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search Company Name or Symbol\",\n          variant: \"outlined\",\n          size: \"small\",\n          value: searchText,\n          onChange: handleSearch,\n          className: \"searchInput\",\n          style: {\n            marginLeft: '3%',\n            marginRight: 5,\n            minWidth: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 32\n          }, this),\n          style: {\n            flex: 'none',\n            marginLeft: '10px',\n            alignSelf: 'strech'\n          },\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        style: {\n          maxHeight: 'calc(90vh - 90px)'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: selectAll,\n                  onChange: handleSelectAll,\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'companyName',\n                  direction: sortConfig.key === 'companyName' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('companyName'),\n                  children: \"Company Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'symbol',\n                  direction: sortConfig.key === 'symbol' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('symbol'),\n                  children: \"Symbol\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'bsePrice',\n                  direction: sortConfig.key === 'bsePrice' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('bsePrice'),\n                  children: \"BSE Price (INR)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'nsePrice',\n                  direction: sortConfig.key === 'nsePrice' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('nsePrice'),\n                  children: \"NSE Price (INR)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'profit',\n                  direction: sortConfig.key === 'profit' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('profit'),\n                  children: \"Profit (INR)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'profit',\n                  direction: sortConfig.key === 'profit' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('profit'),\n                  children: \"Buy On (Exchange Market)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  active: sortConfig.key === 'profit',\n                  direction: sortConfig.key === 'profit' ? sortConfig.direction : 'asc',\n                  onClick: () => handleSort('profit'),\n                  children: \"Sell On (Exchange Market)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: sortedData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                checked: selectedRows.includes(item.id),\n                onChange: () => handleRowCheckboxToggle(item.id),\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.companyName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.symbol\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.bsePrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.nsePrice\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: item.profit.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: buyHandler(item.bsePrice, item.nsePrice)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: sellHandler(item.bsePrice, item.nsePrice)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 25\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [5, 10, 20, 50],\n        component: \"div\",\n        count: sortedData.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 9\n  }, this);\n}\n_s(StocksTableView, \"sweRKPTNb43rd4a+y4uR9Wy6VYQ=\");\n_c = StocksTableView;\nexport default _c2 = /*#__PURE__*/memo(StocksTableView);\nvar _c, _c2;\n$RefreshReg$(_c, \"StocksTableView\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","memo","TableContainer","TableCell","TableHead","TableRow","TableBody","Table","TableSortLabel","TextField","Button","Paper","CircularProgress","TablePagination","Typography","Checkbox","SaveIcon","Alert","AlertTitle","jsxDEV","_jsxDEV","baseUrl","StocksTableView","index","_s","urlStocks","setUrlStocks","data","setData","shouldRender","setShouldRender","saveStatus","setSaveStatus","gotStocks","setGotStocks","marketStatus","setMarketStatus","indexStatus","setIndexStatus","urlIndex","setUrlIndex","fetchData","response","fetch","jsonData","json","setSortedData","error","console","getMarketStatus","then","status","log","catch","sortedData","selectedRows","setSelectedRows","selectAll","setSelectAll","sortConfig","setSortConfig","key","direction","searchText","setSearchText","page","setPage","rowsPerPage","setRowsPerPage","handleSort","sorted","sort","a","b","handleSearch","event","inputText","target","value","toLowerCase","filteredData","filter","item","Object","values","some","toString","includes","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","handleRowCheckboxToggle","rowId","id","handleSelectAll","map","sendDataToServer","method","headers","body","JSON","stringify","ok","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSave","savedStocks","i","length","targetObject","find","obj","savedStock","username","symbol","companyName","bsePrice","nsePrice","profit","timestamp","Date","now","push","buyHandler","sellHandler","className","style","display","flexDirection","justifyContent","alignItems","marginTop","gutterBottom","variant","marginLeft","marginRight","marginBottom","minWidth","maxWidth","onClose","textAlign","label","size","onChange","color","startIcon","flex","alignSelf","onClick","component","maxHeight","stickyHeader","checked","fontWeight","active","slice","toFixed","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","_c","_c2","$RefreshReg$"],"sources":["C:/Users/BHAKTEE/Documents/CitiBridge/Workflow/Group14/New-Frontend-Using-React-and-MUI/arbitrage-system-frontend/src/components/recommendator/StocksTableView.js"],"sourcesContent":["import React, { useState, useEffect, memo } from 'react'\r\nimport { TableContainer, TableCell, TableHead, TableRow, TableBody, Table, TableSortLabel, TextField, Button, Paper, CircularProgress } from '@mui/material';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport Typography from '@mui/material/Typography';\r\nimport './StocksTableView.css'\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport {Alert, AlertTitle} from '@mui/material';\r\n\r\nconst baseUrl = 'http://localhost:8080/';\r\n\r\nfunction StocksTableView({index}) {\r\n    const [urlStocks, setUrlStocks] = useState('');\r\n    const [data, setData] = useState([])\r\n    const [shouldRender, setShouldRender] = useState(false)\r\n    const [saveStatus, setSaveStatus] = useState(false)\r\n    const [gotStocks, setGotStocks] = useState(false);\r\n    const [marketStatus, setMarketStatus] = useState(false);\r\n    const [indexStatus, setIndexStatus] = useState(null);\r\n    const [urlIndex, setUrlIndex] = useState('');\r\n\r\n    const fetchData = async () => {\r\n      // Fetch data from the current API URL\r\n      try {\r\n        const response = await fetch(urlStocks);\r\n        const jsonData = await response.json();\r\n        setData(jsonData);\r\n        setGotStocks(true);\r\n        setSortedData(jsonData);\r\n        setShouldRender(true);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(urlIndex);\r\n        const jsonData = await response.json();\r\n        setIndexStatus(jsonData)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    const getMarketStatus = async () => {\r\n      fetch('http://localhost:8080/marketStatus')\r\n      .then((response) => response.json())\r\n      .then((status) => {\r\n          setMarketStatus(status);\r\n          console.log(status);\r\n      })\r\n      .catch((error) => console.error('Error fetching data:', error));\r\n    }\r\n\r\n    useEffect(() => {\r\n       // Initial data fetch\r\n  \r\n      // Fetch data every 15 seconds\r\n      console.log(index)\r\n      setUrlStocks(baseUrl+index)\r\n      setUrlIndex(baseUrl+'indexStatus/'+index);\r\n\r\n      getMarketStatus();\r\n      console.log(urlStocks)\r\n      \r\n      // if(marketStatus){\r\n      //   const interval = setInterval(() => {\r\n      //     fetchData();\r\n      //   }, 15000);\r\n  \r\n      // // Clean up the interval when the component unmounts or when the effect re-runs\r\n      //   return () => clearInterval(interval);\r\n      // }\r\n      // else{\r\n      //   fetchData();\r\n      // }\r\n    }, [index]);\r\n\r\n    // useEffect(() => {\r\n    //   setUrlStocks(baseUrl+index);\r\n    //   setUrlIndex(baseUrl+'indexStatus/'+index);\r\n    // }, [index])\r\n\r\n    // const getData = (index) => {\r\n    //   fetch('http://localhost:8080/marketStatus')\r\n    //   .then((response) => response.json())\r\n    //   .then((status) => {\r\n    //       setMarketStatus(status);\r\n    //       console.log(status);\r\n    //   })\r\n    //   .catch((error) => console.error('Error fetching data:', error));\r\n\r\n    //   //if market is open then and then only update the stocks after every 15 sec\r\n    //   if(marketStatus){\r\n    //     const intervalId = setInterval(() => {\r\n    //       fetch(url)\r\n    //       .then((response) => response.json())\r\n    //       .then((data) => {\r\n    //         setData(data)\r\n    //         setShouldRender(true);\r\n    //         setSortedData(data);\r\n    //         setGotStocks(true);\r\n    //         console.log(data)\r\n    //       })\r\n    //       .catch((error) => console.error('Error fetching data:', error));\r\n    //     }, 15000);\r\n    //     return () => clearInterval(intervalId);\r\n    //   }\r\n\r\n    //   //if market is closed then only fetch last trade data\r\n    //   else{\r\n    //     fetch(url)\r\n    //       .then((response) => response.json())\r\n    //       .then((data) => {\r\n    //         setData(data)\r\n    //         setShouldRender(true);\r\n    //         setSortedData(data);\r\n    //         setGotStocks(true);\r\n    //         console.log(data)\r\n    //       })\r\n    //       .catch((error) => console.error('Error fetching data:', error));\r\n    //   }\r\n      \r\n      \r\n    // }\r\n\r\n\r\n    \r\n    const [sortedData, setSortedData] = React.useState(data);\r\n    const [selectedRows, setSelectedRows] = React.useState([]);\r\n    const [selectAll, setSelectAll] = React.useState(false);\r\n    const [sortConfig, setSortConfig] = React.useState({\r\n        key: null,\r\n        direction: 'asc',\r\n    });\r\n\r\n    const [searchText, setSearchText] = React.useState('');\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleSort = (key) => {\r\n        let direction = 'asc';\r\n        if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n          direction = 'desc';\r\n        }\r\n        setSortConfig({ key, direction });\r\n    \r\n        const sorted = [...data].sort((a, b) => {\r\n          if (a[key] < b[key]) return direction === 'asc' ? -1 : 1;\r\n          if (a[key] > b[key]) return direction === 'asc' ? 1 : -1;\r\n          return 0;\r\n        });\r\n    \r\n        setSortedData(sorted);\r\n      };\r\n\r\n      const handleSearch = (event) => {\r\n        const inputText = event.target.value;\r\n        setSearchText(inputText.toLowerCase());\r\n    \r\n        const filteredData = data.filter((item) =>\r\n          Object.values(item).some((value) =>\r\n            value.toString().toLowerCase().includes(inputText)\r\n          )\r\n        );\r\n    \r\n        setSortedData(filteredData);\r\n      };\r\n\r\n      const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n      };\r\n    \r\n      const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n      };\r\n\r\n      const handleRowCheckboxToggle = (rowId) => {\r\n        if (selectedRows.includes(rowId)) {\r\n          setSelectedRows(selectedRows.filter((id) => id !== rowId));\r\n        } else {\r\n          setSelectedRows([...selectedRows, rowId]);\r\n        }\r\n      };\r\n    \r\n      const handleSelectAll = () => {\r\n        if (selectAll) {\r\n          setSelectedRows([]);\r\n        } else {\r\n          setSelectedRows(sortedData.map((item) => item.id));\r\n        }\r\n        setSelectAll(!selectAll);\r\n      };\r\n\r\n      async function sendDataToServer(data) {\r\n        try {\r\n          const response = await fetch('http://localhost:8080/sdavis92/addStock', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data),\r\n          });\r\n      \r\n          if (response.ok) {\r\n            // Data sent successfully\r\n            console.log('Data sent successfully');\r\n            setSaveStatus(true);\r\n            \r\n          } else {\r\n            // Handle error\r\n            console.error('Error sending data to server');\r\n            <Alert severity=\"error\">\r\n              <AlertTitle>Error</AlertTitle>\r\n              <strong>Error occured! Please try again!</strong>\r\n            </Alert>\r\n          }\r\n        } catch (error) {\r\n          console.error('An error occurred:', error);\r\n        }\r\n      }    \r\n\r\n    const handleSave = () => {\r\n        var savedStocks = [];\r\n        for (let i=0;i<selectedRows.length;i++){\r\n          var targetObject = data.find(obj => obj.id === selectedRows[i]);\r\n          console.log(targetObject);\r\n          var savedStock = {}\r\n          savedStock.username = 'sdavis92';\r\n          savedStock.symbol = targetObject.symbol;\r\n          savedStock.companyName = targetObject.companyName;\r\n          savedStock.bsePrice = targetObject.bsePrice;\r\n          savedStock.nsePrice = targetObject.nsePrice;\r\n          savedStock.profit = targetObject.profit;\r\n          savedStock.timestamp = Date.now();\r\n          savedStocks.push(savedStock)\r\n        }\r\n        // console.log(savedStocks)\r\n        setSelectedRows([])\r\n        sendDataToServer(savedStocks)\r\n    }\r\n\r\n    const buyHandler = (bsePrice, nsePrice) => {\r\n      if(bsePrice>nsePrice) return \"NSE\";\r\n      else return \"BSE\";\r\n    }\r\n\r\n    const sellHandler = (bsePrice, nsePrice) => {\r\n      if(bsePrice>nsePrice) return \"BSE\";\r\n      else return \"NSE\";\r\n    }\r\n\r\n    return (\r\n        <div className=\"root\">\r\n\r\n            {!gotStocks && (\r\n              <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}>\r\n                <CircularProgress style={{marginTop: '10vh'}}/>\r\n                <Typography gutterBottom variant='h4' style={{marginLeft: '25vh', marginRight: '25vh',marginBottom: '25vh', marginTop: '10vh', minWidth: '300px', maxWidth: '1500px'}}>Your Recommendations Are Getting Ready!</Typography>\r\n              </div>\r\n              \r\n            )}\r\n\r\n            \r\n            {shouldRender && (\r\n              \r\n              <div>\r\n                {saveStatus && (\r\n                  <Alert onClose={() => {setSaveStatus(false)}}><strong>Stocks have been saved successfully!</strong></Alert>\r\n                )}\r\n                <Typography variant=\"h4\" gutterBottom style={{marginBottom: '5%', marginLeft: '3%', marginTop: '3%', textAlign: 'left'}}>\r\n                    {index} Arbitrage Recommendations\r\n                </Typography>\r\n                <div style={{display: 'flex', flexDirection: 'row', marginBottom: '2%'}}>\r\n                <TextField\r\n                    label=\"Search Company Name or Symbol\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    value={searchText}\r\n                    onChange={handleSearch}\r\n                    className='searchInput'\r\n                    style={{marginLeft: '3%', marginRight: 5, minWidth: '300px'}}\r\n                />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    startIcon={<SaveIcon />}\r\n                    style={{flex: 'none',  marginLeft: '10px',  alignSelf: 'strech' }}\r\n                    onClick={handleSave}\r\n                >\r\n                    Save\r\n                </Button>\r\n                </div>\r\n            \r\n\r\n            <TableContainer  component={Paper} style={{ maxHeight: 'calc(90vh - 90px)' }}>\r\n                <Table stickyHeader>\r\n                <TableHead>\r\n                    <TableRow>\r\n                    <TableCell >\r\n                        <Checkbox\r\n                        checked={selectAll}\r\n                        onChange={handleSelectAll}\r\n                        color=\"primary\"\r\n                        />\r\n                    </TableCell>\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                    <TableSortLabel\r\n                        active={sortConfig.key === 'companyName'}\r\n                        direction={sortConfig.key === 'companyName' ? sortConfig.direction : 'asc'}\r\n                        onClick={() => handleSort('companyName')}\r\n                        >\r\n                        Company Name\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                    <TableSortLabel\r\n                        active={sortConfig.key === 'symbol'}\r\n                        direction={sortConfig.key === 'symbol' ? sortConfig.direction : 'asc'}\r\n                        onClick={() => handleSort('symbol')}\r\n                    >\r\n                        Symbol\r\n                    </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                        <TableSortLabel\r\n                            active={sortConfig.key === 'bsePrice'}\r\n                            direction={sortConfig.key === 'bsePrice' ? sortConfig.direction : 'asc'}\r\n                            onClick={() => handleSort('bsePrice')}\r\n                        >\r\n                            BSE Price (INR)\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                        <TableSortLabel\r\n                            active={sortConfig.key === 'nsePrice'}\r\n                            direction={sortConfig.key === 'nsePrice' ? sortConfig.direction : 'asc'}\r\n                            onClick={() => handleSort('nsePrice')}\r\n                        >\r\n                            NSE Price (INR)\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                        <TableSortLabel\r\n                            active={sortConfig.key === 'profit'}\r\n                            direction={sortConfig.key === 'profit' ? sortConfig.direction : 'asc'}\r\n                            onClick={() => handleSort('profit')}\r\n                        >\r\n                            Profit (INR)\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                        <TableSortLabel\r\n                            active={sortConfig.key === 'profit'}\r\n                            direction={sortConfig.key === 'profit' ? sortConfig.direction : 'asc'}\r\n                            onClick={() => handleSort('profit')}\r\n                        >\r\n                            Buy On (Exchange Market)\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{fontWeight: 'bold'}}>\r\n                        <TableSortLabel\r\n                            active={sortConfig.key === 'profit'}\r\n                            direction={sortConfig.key === 'profit' ? sortConfig.direction : 'asc'}\r\n                            onClick={() => handleSort('profit')}\r\n                        >\r\n                            Sell On (Exchange Market)\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                    {/* Add more table header cells */}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {sortedData\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((item) => (\r\n                    <TableRow \r\n                        key={item.id}\r\n                        >\r\n                            <Checkbox\r\n                            checked={selectedRows.includes(item.id)}\r\n                            onChange={() => handleRowCheckboxToggle(item.id)}\r\n                            color=\"primary\"\r\n                            />\r\n                        <TableCell>{item.companyName}</TableCell>\r\n                        <TableCell>{item.symbol}</TableCell>\r\n                        <TableCell>{item.bsePrice}</TableCell>\r\n                        <TableCell>{item.nsePrice}</TableCell>\r\n                        <TableCell>{(item.profit).toFixed(2)}</TableCell>\r\n                        <TableCell>{buyHandler(item.bsePrice, item.nsePrice)}</TableCell>\r\n                        <TableCell>{sellHandler(item.bsePrice, item.nsePrice)}</TableCell>\r\n                        {/* Add more table cells for other data properties */}\r\n                    </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[5, 10, 20, 50]}\r\n                component=\"div\"\r\n                count={sortedData.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n            </div>\r\n            )}\r\n            \r\n      </div>\r\n    );\r\n  }  \r\n\r\nexport default memo(StocksTableView)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,IAAI,QAAQ,OAAO;AACxD,SAASC,cAAc,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,KAAK,EAAEC,cAAc,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,gBAAgB,QAAQ,eAAe;AAC5J,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,uBAAuB;AAC9B,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAAQC,KAAK,EAAEC,UAAU,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,OAAO,GAAG,wBAAwB;AAExC,SAASC,eAAeA,CAAC;EAACC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC4B,IAAI,EAAEC,OAAO,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC8B,YAAY,EAAEC,eAAe,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACoC,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM0C,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B;IACA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAClB,SAAS,CAAC;MACvC,MAAMmB,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtCjB,OAAO,CAACgB,QAAQ,CAAC;MACjBV,YAAY,CAAC,IAAI,CAAC;MAClBY,aAAa,CAACF,QAAQ,CAAC;MACvBd,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;IAEA,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAACJ,QAAQ,CAAC;MACtC,MAAMK,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtCP,cAAc,CAACM,QAAQ,CAAC;IAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCN,KAAK,CAAC,oCAAoC,CAAC,CAC1CO,IAAI,CAAER,QAAQ,IAAKA,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CACnCK,IAAI,CAAEC,MAAM,IAAK;MACdf,eAAe,CAACe,MAAM,CAAC;MACvBH,OAAO,CAACI,GAAG,CAACD,MAAM,CAAC;IACvB,CAAC,CAAC,CACDE,KAAK,CAAEN,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC;EAED/C,SAAS,CAAC,MAAM;IACb;;IAED;IACAgD,OAAO,CAACI,GAAG,CAAC7B,KAAK,CAAC;IAClBG,YAAY,CAACL,OAAO,GAACE,KAAK,CAAC;IAC3BiB,WAAW,CAACnB,OAAO,GAAC,cAAc,GAACE,KAAK,CAAC;IAEzC0B,eAAe,CAAC,CAAC;IACjBD,OAAO,CAACI,GAAG,CAAC3B,SAAS,CAAC;;IAEtB;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,EAAE,CAACF,KAAK,CAAC,CAAC;;EAEX;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAIA,MAAM,CAAC+B,UAAU,EAAER,aAAa,CAAC,GAAGhD,KAAK,CAACC,QAAQ,CAAC4B,IAAI,CAAC;EACxD,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG1D,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC0D,SAAS,EAAEC,YAAY,CAAC,GAAG5D,KAAK,CAACC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC4D,UAAU,EAAEC,aAAa,CAAC,GAAG9D,KAAK,CAACC,QAAQ,CAAC;IAC/C8D,GAAG,EAAE,IAAI;IACTC,SAAS,EAAE;EACf,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlE,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkE,IAAI,EAAEC,OAAO,CAAC,GAAGpE,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACoE,WAAW,EAAEC,cAAc,CAAC,GAAGtE,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMsE,UAAU,GAAIR,GAAG,IAAK;IACxB,IAAIC,SAAS,GAAG,KAAK;IACrB,IAAIH,UAAU,CAACE,GAAG,KAAKA,GAAG,IAAIF,UAAU,CAACG,SAAS,KAAK,KAAK,EAAE;MAC5DA,SAAS,GAAG,MAAM;IACpB;IACAF,aAAa,CAAC;MAAEC,GAAG;MAAEC;IAAU,CAAC,CAAC;IAEjC,MAAMQ,MAAM,GAAG,CAAC,GAAG3C,IAAI,CAAC,CAAC4C,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACtC,IAAID,CAAC,CAACX,GAAG,CAAC,GAAGY,CAAC,CAACZ,GAAG,CAAC,EAAE,OAAOC,SAAS,KAAK,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC;MACxD,IAAIU,CAAC,CAACX,GAAG,CAAC,GAAGY,CAAC,CAACZ,GAAG,CAAC,EAAE,OAAOC,SAAS,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;MACxD,OAAO,CAAC;IACV,CAAC,CAAC;IAEFhB,aAAa,CAACwB,MAAM,CAAC;EACvB,CAAC;EAED,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACpCd,aAAa,CAACY,SAAS,CAACG,WAAW,CAAC,CAAC,CAAC;IAEtC,MAAMC,YAAY,GAAGrD,IAAI,CAACsD,MAAM,CAAEC,IAAI,IACpCC,MAAM,CAACC,MAAM,CAACF,IAAI,CAAC,CAACG,IAAI,CAAEP,KAAK,IAC7BA,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAACP,WAAW,CAAC,CAAC,CAACQ,QAAQ,CAACX,SAAS,CACnD,CACF,CAAC;IAED9B,aAAa,CAACkC,YAAY,CAAC;EAC7B,CAAC;EAED,MAAMQ,gBAAgB,GAAGA,CAACb,KAAK,EAAEc,OAAO,KAAK;IAC3CvB,OAAO,CAACuB,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,uBAAuB,GAAIf,KAAK,IAAK;IACzCP,cAAc,CAACuB,QAAQ,CAAChB,KAAK,CAACE,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;IAChDZ,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAM0B,uBAAuB,GAAIC,KAAK,IAAK;IACzC,IAAItC,YAAY,CAACgC,QAAQ,CAACM,KAAK,CAAC,EAAE;MAChCrC,eAAe,CAACD,YAAY,CAAC0B,MAAM,CAAEa,EAAE,IAAKA,EAAE,KAAKD,KAAK,CAAC,CAAC;IAC5D,CAAC,MAAM;MACLrC,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEsC,KAAK,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAItC,SAAS,EAAE;MACbD,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,MAAM;MACLA,eAAe,CAACF,UAAU,CAAC0C,GAAG,CAAEd,IAAI,IAAKA,IAAI,CAACY,EAAE,CAAC,CAAC;IACpD;IACApC,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,eAAewC,gBAAgBA,CAACtE,IAAI,EAAE;IACpC,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACtEuD,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC3E,IAAI;MAC3B,CAAC,CAAC;MAEF,IAAIe,QAAQ,CAAC6D,EAAE,EAAE;QACf;QACAvD,OAAO,CAACI,GAAG,CAAC,wBAAwB,CAAC;QACrCpB,aAAa,CAAC,IAAI,CAAC;MAErB,CAAC,MAAM;QACL;QACAgB,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAC;QAC7C,aAAA3B,OAAA,CAACH,KAAK;UAACuF,QAAQ,EAAC,OAAO;UAAAC,QAAA,gBACrBrF,OAAA,CAACF,UAAU;YAAAuF,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC9BzF,OAAA;YAAAqF,QAAA,EAAQ;UAAgC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MACV;IACF,CAAC,CAAC,OAAO9D,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF;EAEF,MAAM+D,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIC,WAAW,GAAG,EAAE;IACpB,KAAK,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACzD,YAAY,CAAC0D,MAAM,EAACD,CAAC,EAAE,EAAC;MACrC,IAAIE,YAAY,GAAGvF,IAAI,CAACwF,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACtB,EAAE,KAAKvC,YAAY,CAACyD,CAAC,CAAC,CAAC;MAC/DhE,OAAO,CAACI,GAAG,CAAC8D,YAAY,CAAC;MACzB,IAAIG,UAAU,GAAG,CAAC,CAAC;MACnBA,UAAU,CAACC,QAAQ,GAAG,UAAU;MAChCD,UAAU,CAACE,MAAM,GAAGL,YAAY,CAACK,MAAM;MACvCF,UAAU,CAACG,WAAW,GAAGN,YAAY,CAACM,WAAW;MACjDH,UAAU,CAACI,QAAQ,GAAGP,YAAY,CAACO,QAAQ;MAC3CJ,UAAU,CAACK,QAAQ,GAAGR,YAAY,CAACQ,QAAQ;MAC3CL,UAAU,CAACM,MAAM,GAAGT,YAAY,CAACS,MAAM;MACvCN,UAAU,CAACO,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;MACjCf,WAAW,CAACgB,IAAI,CAACV,UAAU,CAAC;IAC9B;IACA;IACA7D,eAAe,CAAC,EAAE,CAAC;IACnByC,gBAAgB,CAACc,WAAW,CAAC;EACjC,CAAC;EAED,MAAMiB,UAAU,GAAGA,CAACP,QAAQ,EAAEC,QAAQ,KAAK;IACzC,IAAGD,QAAQ,GAACC,QAAQ,EAAE,OAAO,KAAK,CAAC,KAC9B,OAAO,KAAK;EACnB,CAAC;EAED,MAAMO,WAAW,GAAGA,CAACR,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAGD,QAAQ,GAACC,QAAQ,EAAE,OAAO,KAAK,CAAC,KAC9B,OAAO,KAAK;EACnB,CAAC;EAED,oBACItG,OAAA;IAAK8G,SAAS,EAAC,MAAM;IAAAzB,QAAA,GAEhB,CAACxE,SAAS,iBACTb,OAAA;MAAK+G,KAAK,EAAE;QACVC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MACd,CAAE;MAAA9B,QAAA,gBACArF,OAAA,CAACR,gBAAgB;QAACuH,KAAK,EAAE;UAACK,SAAS,EAAE;QAAM;MAAE;QAAA9B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/CzF,OAAA,CAACN,UAAU;QAAC2H,YAAY;QAACC,OAAO,EAAC,IAAI;QAACP,KAAK,EAAE;UAACQ,UAAU,EAAE,MAAM;UAAEC,WAAW,EAAE,MAAM;UAACC,YAAY,EAAE,MAAM;UAAEL,SAAS,EAAE,MAAM;UAAEM,QAAQ,EAAE,OAAO;UAAEC,QAAQ,EAAE;QAAQ,CAAE;QAAAtC,QAAA,EAAC;MAAuC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxN,CAEN,EAGAhF,YAAY,iBAEXT,OAAA;MAAAqF,QAAA,GACG1E,UAAU,iBACTX,OAAA,CAACH,KAAK;QAAC+H,OAAO,EAAEA,CAAA,KAAM;UAAChH,aAAa,CAAC,KAAK,CAAC;QAAA,CAAE;QAAAyE,QAAA,eAACrF,OAAA;UAAAqF,QAAA,EAAQ;QAAoC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAC3G,eACDzF,OAAA,CAACN,UAAU;QAAC4H,OAAO,EAAC,IAAI;QAACD,YAAY;QAACN,KAAK,EAAE;UAACU,YAAY,EAAE,IAAI;UAAEF,UAAU,EAAE,IAAI;UAAEH,SAAS,EAAE,IAAI;UAAES,SAAS,EAAE;QAAM,CAAE;QAAAxC,QAAA,GACnHlF,KAAK,EAAC,4BACX;MAAA;QAAAmF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbzF,OAAA;QAAK+G,KAAK,EAAE;UAACC,OAAO,EAAE,MAAM;UAAEC,aAAa,EAAE,KAAK;UAAEQ,YAAY,EAAE;QAAI,CAAE;QAAApC,QAAA,gBACxErF,OAAA,CAACX,SAAS;UACNyI,KAAK,EAAC,+BAA+B;UACrCR,OAAO,EAAC,UAAU;UAClBS,IAAI,EAAC,OAAO;UACZrE,KAAK,EAAEf,UAAW;UAClBqF,QAAQ,EAAE1E,YAAa;UACvBwD,SAAS,EAAC,aAAa;UACvBC,KAAK,EAAE;YAACQ,UAAU,EAAE,IAAI;YAAEC,WAAW,EAAE,CAAC;YAAEE,QAAQ,EAAE;UAAO;QAAE;UAAApC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eACFzF,OAAA,CAACV,MAAM;UACHgI,OAAO,EAAC,WAAW;UACnBW,KAAK,EAAC,SAAS;UACfC,SAAS,eAAElI,OAAA,CAACJ,QAAQ;YAAA0F,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACxBsB,KAAK,EAAE;YAACoB,IAAI,EAAE,MAAM;YAAGZ,UAAU,EAAE,MAAM;YAAGa,SAAS,EAAE;UAAS,CAAE;UAClEC,OAAO,EAAE3C,UAAW;UAAAL,QAAA,EACvB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAGVzF,OAAA,CAAClB,cAAc;QAAEwJ,SAAS,EAAE/I,KAAM;QAACwH,KAAK,EAAE;UAAEwB,SAAS,EAAE;QAAoB,CAAE;QAAAlD,QAAA,eACzErF,OAAA,CAACb,KAAK;UAACqJ,YAAY;UAAAnD,QAAA,gBACnBrF,OAAA,CAAChB,SAAS;YAAAqG,QAAA,eACNrF,OAAA,CAACf,QAAQ;cAAAoG,QAAA,gBACTrF,OAAA,CAACjB,SAAS;gBAAAsG,QAAA,eACNrF,OAAA,CAACL,QAAQ;kBACT8I,OAAO,EAAEpG,SAAU;kBACnB2F,QAAQ,EAAErD,eAAgB;kBAC1BsD,KAAK,EAAC;gBAAS;kBAAA3C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACd;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACK,CAAC,eACZzF,OAAA,CAACjB,SAAS;gBAACgI,KAAK,EAAE;kBAAC2B,UAAU,EAAE;gBAAM,CAAE;gBAAArD,QAAA,eACvCrF,OAAA,CAACZ,cAAc;kBACXuJ,MAAM,EAAEpG,UAAU,CAACE,GAAG,KAAK,aAAc;kBACzCC,SAAS,EAAEH,UAAU,CAACE,GAAG,KAAK,aAAa,GAAGF,UAAU,CAACG,SAAS,GAAG,KAAM;kBAC3E2F,OAAO,EAAEA,CAAA,KAAMpF,UAAU,CAAC,aAAa,CAAE;kBAAAoC,QAAA,EACxC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAgB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eAEZzF,OAAA,CAACjB,SAAS;gBAACgI,KAAK,EAAE;kBAAC2B,UAAU,EAAE;gBAAM,CAAE;gBAAArD,QAAA,eACvCrF,OAAA,CAACZ,cAAc;kBACXuJ,MAAM,EAAEpG,UAAU,CAACE,GAAG,KAAK,QAAS;kBACpCC,SAAS,EAAEH,UAAU,CAACE,GAAG,KAAK,QAAQ,GAAGF,UAAU,CAACG,SAAS,GAAG,KAAM;kBACtE2F,OAAO,EAAEA,CAAA,KAAMpF,UAAU,CAAC,QAAQ,CAAE;kBAAAoC,QAAA,EACvC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAgB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eAEZzF,OAAA,CAACjB,SAAS;gBAACgI,KAAK,EAAE;kBAAC2B,UAAU,EAAE;gBAAM,CAAE;gBAAArD,QAAA,eACnCrF,OAAA,CAACZ,cAAc;kBACXuJ,MAAM,EAAEpG,UAAU,CAACE,GAAG,KAAK,UAAW;kBACtCC,SAAS,EAAEH,UAAU,CAACE,GAAG,KAAK,UAAU,GAAGF,UAAU,CAACG,SAAS,GAAG,KAAM;kBACxE2F,OAAO,EAAEA,CAAA,KAAMpF,UAAU,CAAC,UAAU,CAAE;kBAAAoC,QAAA,EACzC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAgB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eAEZzF,OAAA,CAACjB,SAAS;gBAACgI,KAAK,EAAE;kBAAC2B,UAAU,EAAE;gBAAM,CAAE;gBAAArD,QAAA,eACnCrF,OAAA,CAACZ,cAAc;kBACXuJ,MAAM,EAAEpG,UAAU,CAACE,GAAG,KAAK,UAAW;kBACtCC,SAAS,EAAEH,UAAU,CAACE,GAAG,KAAK,UAAU,GAAGF,UAAU,CAACG,SAAS,GAAG,KAAM;kBACxE2F,OAAO,EAAEA,CAAA,KAAMpF,UAAU,CAAC,UAAU,CAAE;kBAAAoC,QAAA,EACzC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAgB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eAEZzF,OAAA,CAACjB,SAAS;gBAACgI,KAAK,EAAE;kBAAC2B,UAAU,EAAE;gBAAM,CAAE;gBAAArD,QAAA,eACnCrF,OAAA,CAACZ,cAAc;kBACXuJ,MAAM,EAAEpG,UAAU,CAACE,GAAG,KAAK,QAAS;kBACpCC,SAAS,EAAEH,UAAU,CAACE,GAAG,KAAK,QAAQ,GAAGF,UAAU,CAACG,SAAS,GAAG,KAAM;kBACtE2F,OAAO,EAAEA,CAAA,KAAMpF,UAAU,CAAC,QAAQ,CAAE;kBAAAoC,QAAA,EACvC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAgB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eAEZzF,OAAA,CAACjB,SAAS;gBAACgI,KAAK,EAAE;kBAAC2B,UAAU,EAAE;gBAAM,CAAE;gBAAArD,QAAA,eACnCrF,OAAA,CAACZ,cAAc;kBACXuJ,MAAM,EAAEpG,UAAU,CAACE,GAAG,KAAK,QAAS;kBACpCC,SAAS,EAAEH,UAAU,CAACE,GAAG,KAAK,QAAQ,GAAGF,UAAU,CAACG,SAAS,GAAG,KAAM;kBACtE2F,OAAO,EAAEA,CAAA,KAAMpF,UAAU,CAAC,QAAQ,CAAE;kBAAAoC,QAAA,EACvC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAgB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eAEZzF,OAAA,CAACjB,SAAS;gBAACgI,KAAK,EAAE;kBAAC2B,UAAU,EAAE;gBAAM,CAAE;gBAAArD,QAAA,eACnCrF,OAAA,CAACZ,cAAc;kBACXuJ,MAAM,EAAEpG,UAAU,CAACE,GAAG,KAAK,QAAS;kBACpCC,SAAS,EAAEH,UAAU,CAACE,GAAG,KAAK,QAAQ,GAAGF,UAAU,CAACG,SAAS,GAAG,KAAM;kBACtE2F,OAAO,EAAEA,CAAA,KAAMpF,UAAU,CAAC,QAAQ,CAAE;kBAAAoC,QAAA,EACvC;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAgB;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEF;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eACZzF,OAAA,CAACd,SAAS;YAAAmG,QAAA,EACTnD,UAAU,CACN0G,KAAK,CAAC/F,IAAI,GAAGE,WAAW,EAAEF,IAAI,GAAGE,WAAW,GAAGA,WAAW,CAAC,CAC3D6B,GAAG,CAAEd,IAAI,iBACV9D,OAAA,CAACf,QAAQ;cAAAoG,QAAA,gBAGDrF,OAAA,CAACL,QAAQ;gBACT8I,OAAO,EAAEtG,YAAY,CAACgC,QAAQ,CAACL,IAAI,CAACY,EAAE,CAAE;gBACxCsD,QAAQ,EAAEA,CAAA,KAAMxD,uBAAuB,CAACV,IAAI,CAACY,EAAE,CAAE;gBACjDuD,KAAK,EAAC;cAAS;gBAAA3C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACd,CAAC,eACNzF,OAAA,CAACjB,SAAS;gBAAAsG,QAAA,EAAEvB,IAAI,CAACsC;cAAW;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACzCzF,OAAA,CAACjB,SAAS;gBAAAsG,QAAA,EAAEvB,IAAI,CAACqC;cAAM;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACpCzF,OAAA,CAACjB,SAAS;gBAAAsG,QAAA,EAAEvB,IAAI,CAACuC;cAAQ;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCzF,OAAA,CAACjB,SAAS;gBAAAsG,QAAA,EAAEvB,IAAI,CAACwC;cAAQ;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACtCzF,OAAA,CAACjB,SAAS;gBAAAsG,QAAA,EAAGvB,IAAI,CAACyC,MAAM,CAAEsC,OAAO,CAAC,CAAC;cAAC;gBAAAvD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACjDzF,OAAA,CAACjB,SAAS;gBAAAsG,QAAA,EAAEuB,UAAU,CAAC9C,IAAI,CAACuC,QAAQ,EAAEvC,IAAI,CAACwC,QAAQ;cAAC;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACjEzF,OAAA,CAACjB,SAAS;gBAAAsG,QAAA,EAAEwB,WAAW,CAAC/C,IAAI,CAACuC,QAAQ,EAAEvC,IAAI,CAACwC,QAAQ;cAAC;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA,GAb7D3B,IAAI,CAACY,EAAE;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAeN,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACjBzF,OAAA,CAACP,eAAe;QACZqJ,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;QACpCR,SAAS,EAAC,KAAK;QACfS,KAAK,EAAE7G,UAAU,CAAC2D,MAAO;QACzB9C,WAAW,EAAEA,WAAY;QACzBF,IAAI,EAAEA,IAAK;QACXmG,YAAY,EAAE5E,gBAAiB;QAC/B6E,mBAAmB,EAAE3E;MAAwB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEV;AAACrF,EAAA,CA3ZMF,eAAe;AAAAgJ,EAAA,GAAfhJ,eAAe;AA6ZxB,eAAAiJ,GAAA,gBAAetK,IAAI,CAACqB,eAAe,CAAC;AAAA,IAAAgJ,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}