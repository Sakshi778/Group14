{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAKTEE\\\\Documents\\\\CitiBridge\\\\Workflow\\\\Group14\\\\New-Frontend-Using-React-and-MUI\\\\arbitrage-system-frontend\\\\src\\\\components\\\\profile\\\\DynamicRenderer.js\";\nimport { Typography } from '@mui/material';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicRenderer = ({\n  data\n}) => {\n  const renderFields = () => {\n    return Object.keys(data).map((fieldName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          fontWeight: 'bold',\n          marginRight: '10px',\n          flex: 1,\n          width: '100px'\n        },\n        gutterBottom: true,\n        children: underscoreToCamelCase(fieldName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        style: {\n          flex: 1\n        },\n        children: data[fieldName]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this));\n  };\n  function underscoreToCamelCase(input) {\n    return input.split('_').map((word, index) => {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join(' ');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-renderer\",\n    children: renderFields()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c = DynamicRenderer;\nexport default DynamicRenderer;\nvar _c;\n$RefreshReg$(_c, \"DynamicRenderer\");","map":{"version":3,"names":["Typography","React","jsxDEV","_jsxDEV","DynamicRenderer","data","renderFields","Object","keys","map","fieldName","index","style","display","flexDirection","children","fontWeight","marginRight","flex","width","gutterBottom","underscoreToCamelCase","fileName","_jsxFileName","lineNumber","columnNumber","input","split","word","charAt","toUpperCase","slice","join","className","_c","$RefreshReg$"],"sources":["C:/Users/BHAKTEE/Documents/CitiBridge/Workflow/Group14/New-Frontend-Using-React-and-MUI/arbitrage-system-frontend/src/components/profile/DynamicRenderer.js"],"sourcesContent":["import { Typography } from '@mui/material';\r\nimport React from 'react';\r\n\r\nconst DynamicRenderer = ({ data }) => {\r\n  const renderFields = () => {\r\n    return Object.keys(data).map((fieldName, index) => (\r\n      <div key={index} style={{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n      }}>\r\n        <Typography style={{\r\n            fontWeight: 'bold',\r\n            marginRight: '10px',\r\n            flex: 1,\r\n            width: '100px',\r\n        }} gutterBottom>{underscoreToCamelCase(fieldName)}</Typography>\r\n        <Typography gutterBottom style={{\r\n            flex: 1\r\n        }}>{data[fieldName]}</Typography>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  function underscoreToCamelCase(input) {\r\n    return input\r\n      .split('_')\r\n      .map((word, index) => {\r\n        return word.charAt(0).toUpperCase() + word.slice(1);\r\n      })\r\n      .join(' ');\r\n  }\r\n\r\n  return (\r\n    <div className=\"data-renderer\">\r\n      {renderFields()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DynamicRenderer;\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EACpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAOC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,kBAC5CR,OAAA;MAAiBS,KAAK,EAAE;QACtBC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE;MACjB,CAAE;MAAAC,QAAA,gBACAZ,OAAA,CAACH,UAAU;QAACY,KAAK,EAAE;UACfI,UAAU,EAAE,MAAM;UAClBC,WAAW,EAAE,MAAM;UACnBC,IAAI,EAAE,CAAC;UACPC,KAAK,EAAE;QACX,CAAE;QAACC,YAAY;QAAAL,QAAA,EAAEM,qBAAqB,CAACX,SAAS;MAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC/DtB,OAAA,CAACH,UAAU;QAACoB,YAAY;QAACR,KAAK,EAAE;UAC5BM,IAAI,EAAE;QACV,CAAE;QAAAH,QAAA,EAAEV,IAAI,CAACK,SAAS;MAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA,GAZzBd,KAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAaV,CACN,CAAC;EACJ,CAAC;EAED,SAASJ,qBAAqBA,CAACK,KAAK,EAAE;IACpC,OAAOA,KAAK,CACTC,KAAK,CAAC,GAAG,CAAC,CACVlB,GAAG,CAAC,CAACmB,IAAI,EAAEjB,KAAK,KAAK;MACpB,OAAOiB,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CACDC,IAAI,CAAC,GAAG,CAAC;EACd;EAEA,oBACE7B,OAAA;IAAK8B,SAAS,EAAC,eAAe;IAAAlB,QAAA,EAC3BT,YAAY,CAAC;EAAC;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV,CAAC;AAACS,EAAA,GAlCI9B,eAAe;AAoCrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}