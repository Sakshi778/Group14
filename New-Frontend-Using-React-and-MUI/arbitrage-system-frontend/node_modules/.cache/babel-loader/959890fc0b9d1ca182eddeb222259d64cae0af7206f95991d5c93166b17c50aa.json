{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BHAKTEE\\\\Documents\\\\CitiBridge\\\\Workflow\\\\Group14\\\\New-Frontend-Using-React-and-MUI\\\\arbitrage-system-frontend\\\\src\\\\components\\\\recommendator\\\\Recommender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { TextField } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport SideBarComponent from './SideBarComponent';\nimport './Recommender.css';\nimport RecommendedStocks from './RecommendedStocks';\nimport StockList from '../StockList';\nimport StocksTableView from './StocksTableView';\nimport GridTableViewToggle from './GridTableViewToggle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Recommender() {\n  _s();\n  const [gotStocks, setGotStocks] = useState(false);\n  const [isFirt, setIsFirst] = useState(false);\n  const [stocks, setStocks] = useState([]);\n  const handleSubmit = () => {\n    //fetch the data for first time\n    if (isFirt) {\n      getData('');\n      gotStocks = true;\n    } else {\n      getData('');\n      gotStocks = true;\n    }\n  };\n  const getData = url => {\n    //get it for first time\n    const intervalId = setInterval(() => {\n      fetch(url).then(response => response.json()).then(data => {\n        setStocks(data);\n        console.log(stocks);\n      }).catch(error => console.error('Error fetching data:', error));\n    }, 15000);\n    return () => clearInterval(intervalId);\n  };\n  useEffect(() => {\n    getData('http://localhost:8080/getStockDetails');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recommender-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flex: '30%',\n        marginRight: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(SideBarComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StocksTableView, {\n      data: stocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Recommender, \"0R/ziHHkO5AR3piA8J10SPVNaZk=\");\n_c = Recommender;\nexport default Recommender;\nvar _c;\n$RefreshReg$(_c, \"Recommender\");","map":{"version":3,"names":["React","useState","useEffect","TextField","Typography","SideBarComponent","RecommendedStocks","StockList","StocksTableView","GridTableViewToggle","jsxDEV","_jsxDEV","Recommender","_s","gotStocks","setGotStocks","isFirt","setIsFirst","stocks","setStocks","handleSubmit","getData","url","intervalId","setInterval","fetch","then","response","json","data","console","log","catch","error","clearInterval","className","children","style","display","flex","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/BHAKTEE/Documents/CitiBridge/Workflow/Group14/New-Frontend-Using-React-and-MUI/arbitrage-system-frontend/src/components/recommendator/Recommender.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { TextField } from '@mui/material'\r\nimport Typography from '@mui/material/Typography';\r\nimport SideBarComponent from './SideBarComponent';\r\nimport './Recommender.css'\r\nimport RecommendedStocks from './RecommendedStocks';\r\nimport StockList from '../StockList';\r\nimport StocksTableView from './StocksTableView';\r\nimport GridTableViewToggle from './GridTableViewToggle';\r\n\r\n\r\nfunction Recommender() {\r\n    const [gotStocks, setGotStocks] = useState(false);\r\n    const [isFirt, setIsFirst] = useState(false);\r\n    const [stocks, setStocks] = useState([]);\r\n\r\n    const handleSubmit = () => {\r\n        //fetch the data for first time\r\n        if(isFirt){\r\n            getData('')\r\n            gotStocks = true;\r\n        }\r\n        else{\r\n            getData('')\r\n            gotStocks = true;\r\n        }\r\n    }\r\n\r\n    const getData = (url) => {\r\n        //get it for first time\r\n        const intervalId = setInterval(() => {\r\n            fetch(url)\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              setStocks(data)\r\n              console.log(stocks)\r\n              \r\n\r\n            })\r\n            .catch((error) => console.error('Error fetching data:', error));\r\n          }, 15000);\r\n          return () => clearInterval(intervalId);\r\n    }\r\n\r\n    \r\n\r\n    useEffect(() =>{\r\n        getData('http://localhost:8080/getStockDetails')\r\n    }, [])\r\n      \r\n    return (\r\n        <div className='recommender-container'>\r\n            <div style={{\r\n                display: 'flex',\r\n                flex: '30%',\r\n                marginRight: '20px'\r\n            }}>\r\n            <SideBarComponent/>\r\n            {/*</div>\r\n            <div style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                flex: '65%',\r\n            }}>\r\n                <Typography variant=\"h3\" color=\"text.secondary\" gutterBottom\r\n                style={{\r\n                    textAlign: 'center',\r\n                    marginTop: 20,\r\n                    marginBottom: 20,\r\n                    color: 'black',\r\n                }}>\r\n                    Arbitrage Recommender\r\n                </Typography>\r\n                <Typography variant='h6'\r\n                style={{\r\n                    textAlign: 'center',\r\n                    marginTop: 20,\r\n                    marginBottom: 20,\r\n                    color: 'grey',\r\n                    // fontWeight: 'bold',\r\n                    minWidth: '100px',\r\n                }}>Choose the index and get recommendations based on that index.</Typography> */}\r\n            </div>\r\n\r\n            {/* <RecommendedStocks stockList = {stocks}/> */}\r\n            {/* <StockList stockList = {stocks}/> */}\r\n            <StocksTableView data = {stocks}/>\r\n\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Recommender"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAO,mBAAmB;AAC1B,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,SAAS,MAAM,cAAc;AACpC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,mBAAmB,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,MAAM,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMmB,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA,IAAGJ,MAAM,EAAC;MACNK,OAAO,CAAC,EAAE,CAAC;MACXP,SAAS,GAAG,IAAI;IACpB,CAAC,MACG;MACAO,OAAO,CAAC,EAAE,CAAC;MACXP,SAAS,GAAG,IAAI;IACpB;EACJ,CAAC;EAED,MAAMO,OAAO,GAAIC,GAAG,IAAK;IACrB;IACA,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACjCC,KAAK,CAACH,GAAG,CAAC,CACTI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACdV,SAAS,CAACU,IAAI,CAAC;QACfC,OAAO,CAACC,GAAG,CAACb,MAAM,CAAC;MAGrB,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;IACjE,CAAC,EAAE,KAAK,CAAC;IACT,OAAO,MAAMC,aAAa,CAACX,UAAU,CAAC;EAC5C,CAAC;EAIDrB,SAAS,CAAC,MAAK;IACXmB,OAAO,CAAC,uCAAuC,CAAC;EACpD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA;IAAKwB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClCzB,OAAA;MAAK0B,KAAK,EAAE;QACRC,OAAO,EAAE,MAAM;QACfC,IAAI,EAAE,KAAK;QACXC,WAAW,EAAE;MACjB,CAAE;MAAAJ,QAAA,eACFzB,OAAA,CAACN,gBAAgB;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAyBd,CAAC,eAINjC,OAAA,CAACH,eAAe;MAACqB,IAAI,EAAIX;IAAO;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEjC,CAAC;AAEd;AAAC/B,EAAA,CA/EQD,WAAW;AAAAiC,EAAA,GAAXjC,WAAW;AAiFpB,eAAeA,WAAW;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}